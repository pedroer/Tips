#!/bin/bash
#Script build using https://gist.github.com/padcom/3677248 as reference
refname="$1"
oldrev="$2"
newrev="$3"
result=0

# Make sure we handle the situation when the branch does not exist yet
if ! [ "$oldrev" = "0000000000000000000000000000000000000000" ] ; then
    excludes=( ^$oldrev )
else
    excludes=( $(git for-each-ref --format '^%(refname:short)' refs/heads/) )
fi

# Get the list of incomming commits
commits=`git rev-list $newrev "${excludes[@]}"`

# For every commit in the list
for commit in $commits
do
  # check the log message for ticket number
  message=`git log --format=%s -1 $commit`
  ticket=`echo "$message" | grep -o "^[A-Z]\{2,3\}-[0-9]\+"`
  if [ "$ticket" = "" ] ; then
    echo "####################################################################################"
    echo "Error: THE COMMIT MESSAGE PATTER MUST BE FOLLOWED!!!"
    echo "Ex:"
    echo "OS-1234 - UC12 - commit message"
    echo "OS-1234 - commit message"
    echo "MT-1234 - commit message"
    echo "####################################################################################"
    echo "Commit $commit not in the pattern"


    result=1
  fi
  
  email=`git log --format='%ae' -1 $commit`  
  checkRegisteredEmail=`cat listRegisteredEmails.txt |grep $email`
  if [ ${#checkRegisteredEmail} -eq 0 ] ; then
    echo "####################################################################################"
    echo "Error: Email Not Present at GITLAB"
    echo "Update your Email to the same used at GITLAB Interface"
    echo "####################################################################################"    
    result=1
  fi
done

exit $result
